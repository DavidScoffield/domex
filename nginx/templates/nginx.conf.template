# nginx/templates/nginx.conf

events {
}

http {
  upstream next-app {
    server next-app:$FRONT_INTERNAL_PORT;
  }

  upstream backend {
    server backend:$BACK_INTERNAL_PORT;
  }

  server {
    # Redirect HTTP requests to HTTPS.
    listen 80;

    server_name localhost;
    root /srv/public;
    return 301 https://$host:$EXTERNAL_HTTPS_PORT$request_uri;
  }

  server {
    listen 443 ssl;

    server_name localhost;
    root /srv/public;
    server_tokens off;

    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    location / {
      try_files $uri $uri/ @next-app;
    }

    location @next-app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Ssl on;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://next-app;
      proxy_cookie_path / "/; HTTPOnly; Secure";
    }

    # Pasar solicitudes a /backend al backend sin el prefijo /backend
    location /backend {
      rewrite ^/backend/(.*) /$1 break;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Ssl on;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://backend;
      proxy_cookie_path / "/; HTTPOnly; Secure";

      # Configuraci√≥n para WebSocket (ws y wss)
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}